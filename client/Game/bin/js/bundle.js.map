{"version":3,"file":"bundle.js","sources":["../../src/ui/layaMaxUI.ts","../../src/script/GameUI.ts","../../src/GameConfig.ts","../../src/Config/LangType.ts","../../src/Config/ConfigApi.ts","../../src/Config/BaseConfigRender.ts","../../src/Config/CsvConfigRender.ts","../../src/Config/BaseConfig.ts","../../src/Config/LangConfig.ts","../../src/Config/Interfaces/ConfigFieldType.ts","../../src/Config/LangConfigReader.ts","../../src/Config/LangConfigLoaderList.ts","../../src/Config/Keys/TEXT.ts","../../src/Config/LangConfigLoader.ts","../../src/Config/LangManager.ts","../../src/Config/ExcelConfigLange.ts","../../src/Config/ConfigExtends/LoaderConfig.ts","../../src/Config/ConfigExtends/MenuConfig.ts","../../src/Config/ConfigExtends/MsgConfig.ts","../../src/Config/ConfigExtends/UnlockConfig.ts","../../src/Config/ExcelConfigReader.ts","../../src/Config/ReaderExtends/LoaderConfigReader.ts","../../src/Config/ReaderExtends/MenuConfigReader.ts","../../src/Config/ReaderExtends/MsgConfigReader.ts","../../src/Config/ReaderExtends/UnlockConfigReader.ts","../../src/Config/ExcelConfigManager.ts","../../src/Config/ConfigManagerExpressionList.ts","../../src/_WillRemove/ConfigManager.ts","../../src/Main.ts"],"sourcesContent":["/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\nimport View=Laya.View;\r\nimport Dialog=Laya.Dialog;\r\nimport Scene=Laya.Scene;\nvar REG: Function = Laya.ClassUtils.regClass;\nexport module ui.test {\r\n    export class TestSceneUI extends Laya.Scene {\r\n        constructor(){ super()}\r\n        createChildren():void {\r\n            super.createChildren();\r\n            this.loadScene(\"test/TestScene\");\r\n        }\r\n    }\r\n    REG(\"ui.test.TestSceneUI\",TestSceneUI);\r\n}\r","import { ui } from \"./../ui/layaMaxUI\";\r\n/**\r\n * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联\r\n * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果\r\n * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。\r\n */\r\nexport default class GameUI extends ui.test.TestSceneUI {\r\n    constructor() {\r\n        super();\r\n\t\t\r\n        //添加3D场景\r\n        var scene: Laya.Scene3D = Laya.stage.addChild(new Laya.Scene3D()) as Laya.Scene3D;\r\n\r\n        //添加照相机\r\n        var camera: Laya.Camera = (scene.addChild(new Laya.Camera(0, 0.1, 100))) as Laya.Camera;\r\n        camera.transform.translate(new Laya.Vector3(0, 3, 3));\r\n        camera.transform.rotate(new Laya.Vector3(-30, 0, 0), true, false);\r\n\r\n        //添加方向光\r\n        var directionLight: Laya.DirectionLight = scene.addChild(new Laya.DirectionLight()) as Laya.DirectionLight;\r\n        directionLight.color = new Laya.Vector3(0.6, 0.6, 0.6);\r\n        directionLight.transform.worldMatrix.setForward(new Laya.Vector3(1, -1, 0));\r\n\r\n        //添加自定义模型\r\n        var box: Laya.MeshSprite3D = scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createBox(1, 1, 1))) as Laya.MeshSprite3D;\r\n        box.transform.rotate(new Laya.Vector3(0, 45, 0), false, false);\r\n        var material: Laya.BlinnPhongMaterial = new Laya.BlinnPhongMaterial();\r\n\t\tLaya.Texture2D.load(\"res/layabox.png\", Laya.Handler.create(null, function(tex:Laya.Texture2D) {\r\n\t\t\t\tmaterial.albedoTexture = tex;\r\n\t\t}));\r\n        box.meshRenderer.material = material;\r\n    }\r\n}","/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\r\nimport GameUI from \"./script/GameUI\"\r\n/*\r\n* 游戏初始化配置;\r\n*/\r\nexport default class GameConfig{\r\n    static width:number=640;\r\n    static height:number=1136;\r\n    static scaleMode:string=\"fixedwidth\";\r\n    static screenMode:string=\"none\";\r\n    static alignV:string=\"top\";\r\n    static alignH:string=\"left\";\r\n    static startScene:any=\"test/TestScene.scene\";\r\n    static sceneRoot:string=\"\";\r\n    static debug:boolean=false;\r\n    static stat:boolean=false;\r\n    static physicsDebug:boolean=false;\r\n    static exportSceneToJson:boolean=true;\r\n    constructor(){}\r\n    static init(){\r\n        var reg: Function = Laya.ClassUtils.regClass;\r\n        reg(\"script/GameUI.ts\",GameUI);\r\n    }\r\n}\r\nGameConfig.init();","\r\nexport default class LangType\r\n{\r\n\tstatic zh_cn = \"zh_cn\";\r\n\tstatic zh_tw = \"zh_tw\";\r\n\tstatic en = \"en\";\r\n\r\n\tstatic toLang(httpLang: string): string\r\n\t{\r\n\t\thttpLang = httpLang.replace(\"-\", \"_\").toLowerCase();\r\n\t\tif (httpLang.indexOf(\"en\") != -1)\r\n\t\t\thttpLang = LangType.en;\r\n\r\n\t\t// if (window[\"Game\"])\t\r\n\t\t// {\r\n\t\t// \tif (!Game.config.languageType.getConfigByValue(httpLang))\r\n\t\t// \t{\r\n\t\t// \t\thttpLang = LangType.en;\r\n\t\t// \t}\r\n\t\t// }\r\n\t\t// else\r\n\t\t{\r\n\t\t\tlet has = false;\r\n\t\t\tfor (let v in LangType)\r\n\t\t\t{\r\n\t\t\t\tif (v == httpLang)\r\n\t\t\t\t{\r\n\t\t\t\t\thas = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!has)\r\n\t\t\t{\r\n\t\t\t\thttpLang = LangType.en;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\treturn httpLang;\r\n\t}\r\n}","import LangConfigReader from \"./LangConfigReader\";\r\n\r\n/** 配置对外扩展接口 */\r\nexport default class ConfigApi\r\n{\r\n    //===================\r\n    // 对外\r\n    //-------------------\r\n\r\n    /** 设置FairyGUI 多语言 */\r\n    static callFguiSetStringsSource: (lang: LangConfigReader)=>void;\r\n\r\n    /** 加载配置 */\r\n    static callLoadResAsync: (path: string, type: string)=>Promise<any>;\r\n\r\n    /** 配置根目录路径 */\r\n    static callConfigRootPath: ()=>string;\r\n\r\n\r\n    //===================\r\n    // 内部\r\n    //-------------------\r\n    \r\n    /** 设置FairyGUI 多语言 */\r\n    static setFguiStringSource(lang: LangConfigReader)\r\n    {\r\n        if(this.callFguiSetStringsSource)\r\n        {\r\n            this.callFguiSetStringsSource(lang);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /** 获取异步加载函数 */\r\n    static get loadResAsyncFun(): (path: string, type: string)=>Promise<any>\r\n    {\r\n        if(this.callLoadResAsync)\r\n        {\r\n            return this.callLoadResAsync;\r\n        }\r\n        else\r\n        {\r\n            return this.loadResAsync;\r\n        }\r\n    }\r\n\r\n    \r\n    // 加载资源, 异步\r\n    private static async loadResAsync(path: string, type: string): Promise<any>\r\n    {\r\n        return new Promise<any>((resolve)=>\r\n        {\r\n            Laya.loader.load(path, \r\n                Laya.Handler.create(null, (res: any) =>\r\n                {\r\n                    Laya.timer.frameOnce(1, null, ()=>{\r\n                        resolve(res);\r\n                    })\r\n                }), \r\n                null, type);\r\n         });\r\n    }\r\n\r\n    /** 配置根目录路径 */\r\n    static get configRootPath()\r\n    {\r\n        if(this.callConfigRootPath)\r\n        {\r\n            return this.callConfigRootPath();\r\n        }\r\n        \r\n        return \"res/config/\";\r\n    }\r\n\r\n    \r\n}","import BaseConfig from \"./BaseConfig\";\r\n\r\nimport ConfigRenderInterface from \"./Interfaces/ConfigRenderInterface\";\r\nimport ConfigLoaderInterface from \"./Interfaces/ConfigLoaderInterface\";\r\nimport ConfigRenderComplete from \"./Interfaces/ConfigRenderComplete\";\r\nimport ConfigApi from \"./ConfigApi\";\r\n\r\nexport default abstract class BaseConfigRender<T extends BaseConfig> implements ConfigRenderInterface\r\n{\r\n    // 表名\r\n    tableName: string;\r\n\r\n    // 配置字典\r\n    configs: Map<number, T> = new Map<number, T>();\r\n\r\n    // 获取配置列表\r\n    getConfigList()\r\n    {\r\n        var list = [];\r\n        this.configs.forEach((config, key)=>{\r\n            list.push(config);\r\n        })\r\n    \r\n        return list;\r\n    }\r\n\r\n    // 配置列表\r\n    get configList()\r\n    {\r\n        return this.getConfigList();\r\n    }\r\n\r\n    // 获取配置\r\n    getConfig(id: number)\r\n    {\r\n        if (!this.configs.has(id))\r\n        {\r\n            console.log(`${this.tableName} 没有 id=${id} 的配置`);\r\n        }\r\n        return this.configs.get(id);\r\n    }\r\n\r\n    // 添加配置\r\n    addConfig(config: T)\r\n    {\r\n        this.configs.set(config.id, config);\r\n    }\r\n\r\n\r\n\r\n    // 获取配置文件路径        \r\n    getConfigPath(): string\r\n    {\r\n        return ConfigApi.configRootPath + `csv/${this.tableName}.csv`;\r\n    }\r\n\r\n    // 加载配置\r\n    load(configLoader?: ConfigLoaderInterface, onComplete?: ConfigRenderComplete)\r\n    {\r\n\r\n    }\r\n\r\n    // 重新加载配置\r\n    reload(configLoader?: ConfigLoaderInterface, onComplete?: ConfigRenderComplete)\r\n    {\r\n\r\n    }\r\n\r\n\r\n    // 游戏加载完所有\r\n    onGameLoadedAll()\r\n    {\r\n\r\n    }\r\n\r\n    // 清理\r\n    clear()\r\n    {\r\n        this.configs.clear();\r\n    }\r\n\r\n\r\n}","import BaseConfig from \"./BaseConfig\";\r\nimport BaseConfigRender from \"./BaseConfigRender\";\r\n\r\nimport ConfigLoaderInterface from \"./Interfaces/ConfigLoaderInterface\";\r\nimport ConfigRenderComplete from \"./Interfaces/ConfigRenderComplete\";\r\n\r\nexport default abstract class CsvConfigRender<T extends BaseConfig> extends BaseConfigRender<T>\r\n{\r\n    // 单元格分隔符\r\n    csvDelimiter: string = \"\\t\";\r\n\r\n    // 单元格分隔符 替换\r\n    csvSeparatorReplace: string = null;\r\n\r\n    // 行分隔符 替换\r\n    csvLineSeparatorReplace: string = \"|n|\";\r\n\r\n    // 替换分割符\r\n    ReplaceSpearator(txt: string): string\r\n    {\r\n        if (this.tableName == \"TextFgui\" && txt.indexOf(this.csvLineSeparatorReplace) != -1)\r\n        {\r\n            var a = 1;\r\n        }\r\n        txt = txt.replace(/\\|n\\|/g, \"\\n\");\r\n\r\n        // if (!isNullOrEmpty(this.csvSeparatorReplace))\r\n        // {\r\n        //     txt = txt.replaceAll(this.csvSeparatorReplace, this.csvDelimiter);\r\n        // }\r\n\r\n        txt = txt.replace(/\\r/g, \"\");\r\n\r\n        return txt;\r\n    }\r\n\r\n\r\n\r\n    // 表头--类型\r\n    headTypes: Map<number, string> = new Map<number, string>();\r\n\r\n    // 表头--索引\r\n    headKeyEns: Map<string, number> = new Map<string, number>();\r\n\r\n    // 表头--字段\r\n    headKeyFields: Map<number, string> = new Map<number, string>();\r\n\r\n    // 表头--中文\r\n    headKeyCns: Map<number, string> = new Map<number, string>();\r\n\r\n\r\n    // 加载配置\r\n    load(configLoader?: ConfigLoaderInterface, onComplete?: ConfigRenderComplete)\r\n    {\r\n        configLoader.loadConfig(this.getConfigPath(), (txt: string, path?: string) =>\r\n        {\r\n            this.parse(txt);\r\n\r\n            // console.log(`配置 ${this.path} 加载完成`);\r\n\r\n            if (onComplete)\r\n            {\r\n                onComplete(this);\r\n            }\r\n\r\n            configLoader.unloadConfig(this.getConfigPath());\r\n        });\r\n    }\r\n\r\n\r\n    // 重新加载配置\r\n    reload(configLoader?: ConfigLoaderInterface, onComplete?: ConfigRenderComplete)\r\n    {\r\n        this.clear();\r\n        this.load(configLoader, onComplete);\r\n    }\r\n\r\n\r\n    // 清理\r\n    clear()\r\n    {\r\n        this.headTypes.clear();\r\n        this.headKeyEns.clear();\r\n        this.headKeyFields.clear();\r\n        this.headKeyCns.clear();\r\n\r\n        super.clear();\r\n    }\r\n\r\n\r\n    parse(txt: string)\r\n    {\r\n        if (txt == null)\r\n        {\r\n            console.error(`${this.tableName}: txt=${txt}`);\r\n            return;\r\n        }\r\n\r\n        let lines: string[] = txt.split('\\n');\r\n        let line: string;\r\n        let csv: string[];\r\n\r\n        line = lines[0];\r\n        csv = line.split(this.csvDelimiter);\r\n        this.ParseHeadTypes(csv);\r\n\r\n\r\n        line = lines[1];\r\n        csv = line.split(this.csvDelimiter);\r\n        this.ParseHeadKeyCN(csv);\r\n\r\n        line = lines[2];\r\n        csv = line.split(this.csvDelimiter);\r\n        this.ParseHeadKeyEN(csv);\r\n\r\n        for (let i = 3; i < lines.length; i++)\r\n        {\r\n            line = lines[i];\r\n            if (isNullOrEmpty(line))\r\n                continue;\r\n            csv = line.split(this.csvDelimiter);\r\n            for (let j = 0; j < csv.length; j++)\r\n            {\r\n                csv[j] = this.ReplaceSpearator(csv[j]);\r\n            }\r\n            this.ParseCsv(csv);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    ParseHeadTypes(csv: string[])\r\n    {\r\n        let key: string;\r\n        for (let i = 0; i < csv.length; i++)\r\n        {\r\n            key = csv[i];\r\n            if (!isNullOrEmpty(key))\r\n            {\r\n                key = key.trim();\r\n                this.headTypes.set(i, key);\r\n            }\r\n        }\r\n    }\r\n\r\n    ParseHeadKeyCN(csv: string[])\r\n    {\r\n        let key: string;\r\n        for (let i = 0; i < csv.length; i++)\r\n        {\r\n            key = this.ReplaceSpearator(csv[i]);\r\n            if (!isNullOrEmpty(key))\r\n            {\r\n                key = key.trim();\r\n                this.headKeyCns.set(i, key);\r\n            }\r\n        }\r\n    }\r\n\r\n    ParseHeadKeyEN(csv: string[])\r\n    {\r\n        let key: string;\r\n        for (let i = 0; i < csv.length; i++)\r\n        {\r\n            key = csv[i];\r\n            if (!isNullOrEmpty(key))\r\n            {\r\n                key = key.trim();\r\n\r\n                if (this.headKeyEns.has(key))\r\n                {\r\n                    console.error(`${this.tableName}: ParseHeadKeyEN 已经存在key= ${key},  i = ${i}`);\r\n                }\r\n                this.headKeyEns.set(key, i);\r\n                this.headKeyFields.set(i, key);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    ParseCsv(csv: string[])\r\n    {\r\n    }\r\n\r\n    GetHeadType(index: number): string\r\n    {\r\n        return this.headTypes.get(index);\r\n    }\r\n\r\n    GetHeadField(index: number): string\r\n    {\r\n        return this.headKeyFields.get(index);\r\n    }\r\n\r\n    GetHeadIndex(enName: string): number\r\n    {\r\n        if (this.headKeyEns.has(enName))\r\n        {\r\n            return this.headKeyEns.get(enName);\r\n        }\r\n\r\n        console.error(`${this.tableName}: headKeyEns[${enName}] = -1`);\r\n        return -1;\r\n    }\r\n\r\n    /** 游戏所有配置加载完成 */\r\n    onGameLoadedAll()\r\n    {\r\n    }\r\n\r\n\r\n}","export default abstract class BaseConfig\r\n{\r\n    id: number;\r\n}\r\n\r\nexport interface IBaseConfig\r\n{\r\n    id: number;\r\n}","import BaseConfig from \"./BaseConfig\";\r\n\r\n\r\nexport default class LangConfig extends BaseConfig\r\n{\r\n    public dict: Map<string, string | string[]> = new Map<string, string | string[]>();\r\n\r\n\r\n\r\n}","\r\nexport default class ConfigFieldType\r\n{\r\n    static MString = \"string\";\r\n    static MStringArray = \"string[]\";\r\n\r\n}","import CsvConfigRender from \"./CsvConfigRender\";\r\nimport LangConfig from \"./LangConfig\";\r\nimport ConfigFieldType from \"./Interfaces/ConfigFieldType\";\r\n\r\n/** 多语言配置读取器 */\r\nexport default class LangConfigReader extends CsvConfigRender<LangConfig>\r\n{\r\n    // 语言\r\n    public lang: string = \"zh_cn\";\r\n\r\n    constructor(tableName: string)\r\n    {\r\n        super();\r\n        this.tableName = tableName;\r\n    }\r\n\r\n\r\n    // 获取配置文件路径        \r\n    getConfigPath(): string\r\n    {\r\n        return `config/lang/${this.lang}/${this.tableName}.csv`;\r\n    }\r\n\r\n\r\n    private _headKeyFieldList: string[];\r\n    get headKeyFieldList(): string[]\r\n    {\r\n        if (!this._headKeyFieldList)\r\n        {\r\n            this._headKeyFieldList = [];\r\n            this.headKeyFields.forEach((val, key)=>{\r\n                this._headKeyFieldList.push(val);\r\n            })\r\n        }\r\n        return this._headKeyFieldList;\r\n    }\r\n\r\n    ParseCsv(csv: string[])\r\n    {\r\n        let config = new LangConfig();\r\n\r\n        config.id = csvGetInt(csv, this.GetHeadIndex(\"id\"));\r\n\r\n        let fieldList = this.headKeyFieldList;\r\n        for (let i = 0; i < fieldList.length; i++)\r\n        {\r\n            let txt = csvGetString(csv, this.GetHeadIndex(fieldList[i]));\r\n            let headType = this.GetHeadType(i);\r\n            switch (headType)\r\n            {\r\n                case ConfigFieldType.MStringArray:\r\n                    config.dict.set(fieldList[i], toStringArray(txt));\r\n                    break;\r\n                default:\r\n                    config.dict.set(fieldList[i], txt);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this.addConfig(config);\r\n    }\r\n\r\n}","import LangConfigReader from \"./LangConfigReader\";\r\n\r\n/////////////////////////////////////\r\n// ihaiu.Language生成\r\n// http://blog.ihaiu.com/tool-ExportXlsx\r\n/////////////////////////////////////\r\n\r\n/// 配置读取器列表\r\nexport default class LangConfigLoaderList\r\n{\r\n    lang: string = \"zh_cn\";\r\n\r\n    // 读取器列表\r\n    renders: LangConfigReader[] = [];\r\n\r\n    \r\n    textCode   = new LangConfigReader(\"TextCode\");\r\n    textFgui   = new LangConfigReader(\"TextFgui\");\r\n\r\n\r\n    // 初始化读取器列表\r\n    initList()\r\n    {\r\n    }\r\n}","// ===========================\r\n// 代码文本\r\n// ---------------------------\r\nexport default class TEXT\r\n{\r\n    \r\n    static NET_ERROR = \"网络连接失败！请检查网络设备!加油哦！！\";\r\n\r\n    static Login = \"登录\";\r\n    static Auth = \"授权\";\r\n    \r\n    static LangSelectMsg = \"语言需要重启游戏才有效!\";\r\n    static FunNoOpen = \"此功能暂未开放，敬请期待！\";\r\n    static ButtonSelect = \"选择\";\r\n    static ButtonOk = \"确定\";\r\n    static ButtonCannel = \"取消\";\r\n    static ButtonYes = \"是\";\r\n    static ButtonNo = \"否\";\r\n    static Disable = \"内容优化\";\r\n    static Lock = \"无解锁配置！\";\r\n    \r\n    static LvUpMax = \"等级达到最大\";\r\n    static LvUpTo = \"玩家升级 {0} → {1}\";\r\n    static Lv = \"{0}级\";\r\n    static LVDot = \"等级：{0}\";\r\n    static PlayerExp = \"主公经验：{0}\";\r\n    static FatigueNotEnough = \"体力不足，无法进行挑战\";\r\n\r\n    static cannotRecharge = \"游客不能充值\";\r\n    static cannotRechargeNoIos = \"只支持ios内购\";\r\n    static rechargeError = \"充值失败，请稍候重试\";\r\n    static systemTip = \"系统提示\";\r\n    static TitleTip = \"提示\";\r\n    static ErorNoInitProto = \"没有初始化网络\";\r\n    static ErorRequestServerList = \"请求服务器列表失败\";\r\n    static ErorAccountFrozen = \"账号被冻结\";\r\n    static ErorAccountDropped = \"账号被停用\";\r\n    static TipEnterRoleName = \"输入你的名称\";\r\n    static ErrorNameEmpty = \"名字不能是空的\";\r\n    static ErrorContentEmpty = \"内容不能是空的\";\r\n    static ErrorNameUsed = \"名称已经被使用\";\r\n    static ErrorFormatName = \"存在非法字符串，请修改后重试\"\r\n    static ErrorHttpSendFail = \"[Error] 发送请求失败\";\r\n    static HttpTimeOut = \"网络超时! 当前设置的超时时间是{0}\";\r\n    static AlertTextBuyActor = \"是否花费{0}{1}增加艺人数量\";\r\n    static AlertTextScountActor = \"是否花费{0}{1} 探查艺人？\";\r\n    static ToastTextItemNotEnough = \"{0}数量不足\";\r\n    static ToastTextItemNotEnough2 = \"数量不足，需要{0} {1}\";\r\n\r\n    //战队信息\r\n    static ChangeNameCost = \"本次改名需要 {0}\";\r\n    static DuelTempLevel = \"当前决斗神殿段位：{0}\";\r\n    static DuelTempMaxLevel = \"历史最高决斗神殿段位：{0}\";\r\n    static DuelTempCurrentPvpLevel = \"当前竞技排名：{0}\";\r\n    static DuelTempMaxPvpLevel = \"历史最高竞技排名：{0}\";\r\n\r\n    //编队\r\n    static BattlePlanTeamHeroNameAndLevel = \"{0}  {1}级\";\r\n    \r\n    //背包\r\n    static BagCapacity = \"{0}/{1}\"\r\n    static BagItemCount = \"拥有：{0}\";\r\n    static BagExpiredLimitTip = \"{0}后过期\";\r\n    static BagExpiredPeriodTip = \"将在{0}过期\";\r\n    static BagItemSell = \"出售\";\r\n    static BagItemUse = \"使用\";\r\n    static BagItemSplit = \"分解\";\r\n    static BagItemForge = \"锻造\";\r\n    static BagItemChangeEquip = \"穿戴\";\r\n    static BagItemLevelUp = \"使用可增加{0}英雄经验\";\r\n\r\n    //装备\r\n    static EquipPropDes = \"{0}+{1}\";\r\n    static EquipExclusiveTxtMsg = \"{0}专属！只有{1}才可穿戴次装备\";\r\n    static EquipExclusiveTxt = \"{0}专属\"\r\n    static EquipEatExp = \"该装备可提供{0}的强化经验\";\r\n    static EquipTypeWeapon = \"武器\"\r\n    static EquipTypeHelmet = \"头盔\"\r\n    static EquipTypeArmor = \"战甲\"\r\n    static EquipTypeBoots = \"战靴\"\r\n    static EquipTypePendant = \"玉佩\"\r\n    static EquipTypeGem = \"宝物\"\r\n    static EquipNotEnough = \"道具不足，无法选择\"\r\n    static EquipLevelUpStr1 = \"下一级属性\"\r\n    static EquipLevelUpStr2 = \"强化到{0}级时属性增加\"\r\n    static EquipAtkRange = \"系数\";\r\n\r\n    //邮件\r\n    static MailTitle = \"邮件\";\r\n    static DeleteRead = \"删除已读\";\r\n    static ToReader = \"致玩家：\";\r\n    static ReawrdMsg = \"奖励内容：\";\r\n\r\n    static Progress = \"{0}/{1}\";\r\n    \r\n    // 数字\r\n    static N0 = \"零\";\r\n    static N1 = \"一\";\r\n    static N2 = \"二\";\r\n    static N3 = \"三\";\r\n    static N4 = \"四\";\r\n    static N5 = \"五\";\r\n    static N6 = \"六\";\r\n    static N7 = \"七\";\r\n    static N8 = \"八\";\r\n    static N9 = \"九\";\r\n    static N10 = \"十\";\r\n    static N100 = \"百\";\r\n    static N1000 = \"千\";\r\n    static N10000 = \"万\";\r\n\r\n    \r\n    static RewardItemCount = \"x{0}\";\r\n\r\n\r\n    // Time xx前\r\n    static DATE_MonthBefore = \"{0}个月前\";\r\n    static DATE_WeekBefore = \"{0}周前\";\r\n    static DATE_DayBefore = \"{0}天前\";\r\n    static DATE_HourBefore = \"{0}小时前\";\r\n    static DATE_MinuteBefore = \"{0}分钟前\";\r\n    static DATE_SecondeBefore = \"{0}秒前\";\r\n\r\n    // 时间\r\n    static Hour = \"小时\";\r\n    static Minute = \"分\";\r\n    static Second = \"秒\";\r\n\r\n    static MissionNotOpen = \"该关卡尚未开启\";\r\n    static Chapter = \"第{0}章\";\r\n    static ChapterStarTipTitle = \"本章累计{0}星可领取\";\r\n    static ChapterStarNotEnough = \"星星数量不足\";\r\n    static ChapterRewardAlreadyGet = \"奖励已经领取过\";\r\n    static ChapterSpecialTimes = \"今日精英剩余次数：{0}\";\r\n    static ChapterMonsterTimes = \"今日剩余次数：{0}\";\r\n    static SecretBookTimes = \"今日剩余次数：{0}\";\r\n    static SecretBookTimesNotEnough = \"该副本今日挑战次数不足\";\r\n    static SectionSpecialTotalTimes = \"每日一共可购买{0}次精英奖励次数\";\r\n    static SectionMonsterTotalTimes = \"每日一共可购买{0}次魔王奖励次数\";\r\n    static SecretBookTotalTimes = \"每日一共可购买{0}次秘闻奖励次数\";\r\n    static SectionBuyTimesToast = \"奖励次数提升\";\r\n    static SectionCurrentTimes = \"今日第{0}次购买\";\r\n    static SectionTimesNotEnough = \"今日次数已用完\";\r\n    static MissionUnlockCondition = \"{0}级开启\";\r\n    static ChapterCurrentStarNum = \"{0}/{1}\";\r\n\r\n    //秘闻本\r\n    static SecretTimesRemain = \"今日剩余次数: {0}\";\r\n    // static MissionPlayerExp = \"主公经验：{0}\";\r\n    // static MissionHeroExp = \"英雄经验：{0}\";\r\n    static MissionMaxTime = \"通关时间低于{0}秒\";\r\n    static MissionKillBoss = \"打败首领\";\r\n    static MissionHPState = \"剩余生命超过{0}%\";\r\n    static MissionStamina = \"x{0}\";\r\n    static SecretMissionTimesRemain = \"今日剩余次数：{0}\";\r\n    //大秘境\r\n    static SecretLand_BestScore = \"最佳成绩：大秘境{0}\";\r\n    static SecretLand_CurrentKeyStone = \"当前钥石：{0}级\";\r\n    static SecretLand_Buy_Roll_Tips = \"是否消耗{0}点体力兑换Roll币\";\r\n    static SecretLand_Roll_tips = \"当日可兑换次数为{0}，Roll积攒数量上限为{1}\";\r\n    static SecretLand_Fatigue_Not_Enough = \"您没有足够的体力值，需要{0}体力兑换Roll币\";\r\n    static Keystone_LevelUp_Time_Limit = \"{0}分钟\";\r\n    static SecretLand_Level_Limit = \"等级达到{0}后开启{1}层大秘境\";\r\n    static SecretLand_Time_Cost = \"通关时间: {0}\";\r\n    static SecretLand_New_Keystone = \"获取新钥匙：{0}{1}级\";//eg:兴东大秘境12\r\n    \r\n    //十连抽\r\n    static Gashapon_NextFreeTime = \"{0}后免费\"\r\n    static Gashapon_Rate = \"概率 {0}%\";\r\n    static Gashapon_PropDisplay = \"{0} +{1}\";//物攻 +100\r\n    static Gashapon_Times_Remain = \"每日可招募{0}次，今日剩余{1}次\";\r\n    static Gashapon_Times_Not_Enough = \"今日剩余次数不足\";\r\n\r\n    //PVP竞技大厅\r\n    static DuelSeasonDuration = \"{0} - {1}\";//2020.01.01 - 2020.01.31\r\n    static DuelSeasonRemainDays = \"距离赛季结束还有{0}\";\r\n    static DuelCurrentWinTimes = \"本赛季胜场：{0}\";\r\n    static DuelSelectHeroGroupFirst = \"请先选择队伍\";\r\n    static DuelTempOldSeason = \"恭喜您，在上赛季结算时的段位达到了{0}，赛季奖励已经发送 到您的邮箱\";\r\n    static DuelTempNewSeason = \"由于您上赛季的出色表现，您在本赛季的起始段位为{0}\";\r\n    static DuelTempWinTimes = \"胜场：{0}\";\r\n    // 英雄\r\n    static HeroSkillOpenLevel = \"英雄等级达到{0}级别后解锁\";\r\n    static HeroMaxLevel = \"已满级\";\r\n    static HeroInBattle = \"当前英雄已在队伍中！！！\";\r\n    static HeroStarProStr = \"成长\"\r\n    static HeroLevelUpNotEnough = \"当前无法升级，请提升战队等级\";\r\n    static HeroLevelUpItemNotEnough = \"物品不足，无法升级\";\r\n    static HeroLevelUpMax = \"已提升当前最高级\";\r\n\r\n    //排行榜\r\n    static RankMyAllRank = \"我的全区排行：{0}\";\r\n    static RankNotOnRank = \"未上榜\";\r\n    static RankDanStar = \"{0} {1}星\";//青铜 2星\r\n    static HeroSkillLevelNotLevel = \"升级条件不足，需英雄{0}级\";\r\n\r\n    static SecretBookHeroLevelNotEnough = \"英雄{0}级开启\"\r\n\r\n    //引导\r\n    static GuideFinish = \"现在引导结束了，你可以自由体验了\";\r\n    \r\n    static GuideGoToBattle = \"guide_go_section\";\r\n\r\n    static GuideBackHome = \"guide_go_back_home\";\r\n\r\n    static GuideBack = \"guide_go_back\";\r\n} \r\n","import LangConfigLoaderList from \"./LangConfigLoaderList\";\r\n\r\nimport ConfigLoaderInterface from \"./Interfaces/ConfigLoaderInterface\";\r\n\r\n\r\nimport TEXT from \"./Keys/TEXT\";\r\nimport LangConfigReader from \"./LangConfigReader\";\r\nimport ConfigApi from \"./ConfigApi\";\r\n\r\n/// 配置读取器列表\r\nexport default class LangConfigLoader extends LangConfigLoaderList\r\n{\r\n    // 消息--加载进度\r\n    sLoadProgress: Typed3Signal<number, number, number> = new Typed3Signal<number, number, number>();\r\n    // 消息--加载完成\r\n    sLoaded: Signal = new Signal()\r\n\r\n    // 加载器\r\n    configLoader: ConfigLoaderInterface;\r\n\r\n    // 加载进度\r\n    loadProgress = 0;\r\n\r\n    // 是否已经加载完成\r\n    isLoadCompleted = false;\r\n    \r\n    async loadAllAsync():Promise<void>\r\n    {\r\n        return new Promise<void>((resolve)=>{\r\n           this.loadAll();\r\n           \r\n           this.sLoaded.addOnce(()=>\r\n           {\r\n                resolve();\r\n           }, this);\r\n\t\t});\r\n    }\r\n\r\n    // 加载所有\r\n    loadAll()\r\n    {\r\n        // if (this.renders.indexOf(this.textCode) != -1)\r\n        // {\r\n        // \tthis.renders.slice(this.renders.indexOf(this.textCode), 1);\r\n        // \tthis.renders.slice(this.renders.indexOf(this.textFgui), 1);\r\n        // }\r\n\r\n\r\n        this.loadProgress = 0;\r\n        let count = this.renders.length;\r\n        let loadedNum = 0;\r\n        let onItemLoaded = () =>\r\n        {\r\n            loadedNum++;\r\n\r\n            this.loadProgress = loadedNum / count;\r\n            this.sLoadProgress.dispatch(loadedNum, count, this.loadProgress);\r\n\r\n\r\n            if (loadedNum >= count)\r\n            {\r\n                this.onGameLoadedAll();\r\n            }\r\n        };\r\n\r\n        for (let i = 0; i < this.renders.length; i++)\r\n        {\r\n            this.renders[i].lang = this.lang;\r\n            this.renders[i].load(this.configLoader, onItemLoaded);\r\n        }\r\n    }\r\n\r\n\r\n    // 加载完成所有\r\n    onGameLoadedAll()\r\n    {\r\n        for (let i = 0; i < this.renders.length; i++)\r\n        {\r\n            this.renders[i].onGameLoadedAll();\r\n        }\r\n\r\n        // 设置代码文本\t\r\n        this.setCodeTEXT();\r\n        // 设置fgui文本\r\n        ConfigApi.setFguiStringSource(this.textFgui);\r\n\r\n        this.isLoadCompleted = true;\r\n        this.sLoaded.dispatch();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    textRenders: LangConfigReader[] = [];\r\n    // 消息--加载完成\r\n    sTextLoaded: Signal = new Signal()\r\n    loadText()\r\n    {\r\n        let renders = this.textRenders;\r\n        if (renders.length == 0)\r\n        {\r\n            renders.push(this.textCode);\r\n            renders.push(this.textFgui);\r\n        }\r\n\r\n        this.loadProgress = 0;\r\n        let count = renders.length;\r\n        let loadedNum = 0;\r\n        let onItemLoaded = () =>\r\n        {\r\n            loadedNum++;\r\n\r\n            if (loadedNum >= count)\r\n            {\r\n                this.onLoadTextComplte();\r\n            }\r\n        };\r\n\r\n\r\n        for (let i = 0; i < renders.length; i++)\r\n        {\r\n            renders[i].lang = this.lang;\r\n            renders[i].load(this.configLoader, onItemLoaded);\r\n        }\r\n    }\r\n\r\n\r\n    // 加载完成TEXT\r\n    onLoadTextComplte()\r\n    {\r\n        let renders = this.textRenders;\r\n        for (let i = 0; i < renders.length; i++)\r\n        {\r\n            renders[i].onGameLoadedAll();\r\n        }\r\n\r\n        // 设置代码文本\t\r\n        this.setCodeTEXT();\r\n        // 设置fgui文本\r\n        ConfigApi.setFguiStringSource(this.textFgui);\r\n\r\n        this.sTextLoaded.dispatch();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private _srcTEXT: Dictionary<string, string>;\r\n\r\n    // 设置代码文本\t\t\r\n    setCodeTEXT()\r\n    {\r\n\r\n        if (!this._srcTEXT && TEXT)\t\t\r\n        {\r\n            this._srcTEXT = new Dictionary<string, string>();\r\n            for (let key in TEXT)\r\n            {\r\n                this._srcTEXT.add(key, TEXT[key]);\r\n            }\r\n        }\r\n\r\n\r\n        let list = this.textCode.getConfigList();\r\n        for (let i = 0; i < list.length; i++)\r\n        {\r\n            let item = list[i];\r\n            let key = <string>item.dict.getValue(\"key\");\r\n            let value = <string>item.dict.getValue(\"value\");\r\n            if (!isNullOrEmpty(value))\r\n            {\r\n                TEXT[key] = value;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import LangType from \"./LangType\";\r\n\r\nimport LangConfigLoader from \"./LangConfigLoader\";\r\nimport LangConfigReader from \"./LangConfigReader\";\r\nimport LangConfig from \"./LangConfig\";\r\n\r\n/** 多语言配置管理器 */\r\nexport default class LangManager\r\n{\r\n\r\n\tprivate static _Instance: LangManager;\r\n\tstatic get Instance(): LangManager\r\n\t{\r\n\t\tif (!LangManager._Instance)\r\n\t\t{\r\n\t\t\tLangManager._Instance = new LangManager();\r\n\t\t}\r\n\t\treturn LangManager._Instance;\r\n\t}\r\n\r\n\r\n\t// 是否使用多语言\r\n\tisUseLang = false;\r\n\r\n\r\n\tprivate _httpLang: string;\r\n\tget httpLang(): string\r\n\t{\r\n\t\tif (!this._httpLang)\r\n\t\t{\r\n\t\t\tthis.httpLang = this.lang;\r\n\t\t}\r\n\t\treturn this._httpLang;\r\n\t}\r\n\r\n\tset httpLang(value: string)\r\n\t{\r\n\t\tvalue = value.replace(\"_\", \"-\");\r\n\t\tif (value.indexOf(\"-\"))\r\n\t\t{\r\n\t\t\tlet arr = value.split(\"-\");\r\n\t\t\tfor (let i = 1; i < arr.length; i++)\r\n\t\t\t{\r\n\t\t\t\tarr[i] = arr[i].toUpperCase();\r\n\t\t\t}\r\n\t\t\tvalue = arr.join(\"-\");\r\n\t\t}\r\n\t\tthis._httpLang = value;\r\n\r\n\t\t// if (window[\"frame\"] && window[\"frame\"][\"comm\"] && window[\"frame\"][\"comm\"][\"HttpComm\"])\r\n\t\t// \tframe.comm.HttpComm.SetHeader(\"accept-language\", value);\r\n\t}\r\n\r\n\tprivate _lang: string = null;\r\n\tget lang(): string\r\n\t{\r\n\t\tif (!this._lang)\r\n\t\t{\r\n\t\t\t// if (Game.localStorage.hasItem(\"_lang\", true))\r\n\t\t\t// {\r\n\t\t\t// \tthis._lang = Game.localStorage.getString(\"_lang\", true);\r\n\t\t\t// }\r\n\t\t\t// else\r\n\t\t\t// {\r\n\t\t\t// \t// let lang = navigator.language;\r\n\t\t\t// \t// if (!lang)\r\n\t\t\t// \t// {\r\n\t\t\t// \t// \tlang = navigator[\"browserLanguage\"];\r\n\t\t\t// \t// }\r\n\r\n\t\t\t// \t// lang = LangType.toLang(lang);\r\n\t\t\t// \t// this._lang = lang;\r\n\r\n\t\t\t// \tthis._lang = LangType.zh_cn;\r\n\t\t\t// }\r\n\r\n\t\t\t// this.httpLang = this._lang;\r\n\r\n\t\t\t\r\n\t\t\tthis._lang = LangType.zh_cn;\r\n\t\t\tthis.httpLang = this._lang;\r\n\t\t}\r\n\r\n\r\n\t\treturn this._lang;\r\n\t}\r\n\r\n\tset lang(value: string)\r\n\t{\r\n\t\tthis._lang = value;\r\n\t\tthis.httpLang = value;\r\n\t\t// Game.localStorage.setString(\"_lang\", value, true);\r\n\t}\r\n\t\r\n\r\n\r\n\r\n\tprivate langListDict: Dictionary<LangType, LangConfigLoader> = new Dictionary<LangType, LangConfigLoader>();\r\n\r\n\tprivate _current: LangConfigLoader;\r\n\tget current(): LangConfigLoader\r\n\t{\r\n\t\tif (this._current)\r\n\t\t{\r\n\t\t\treturn this._current;\r\n\t\t}\r\n\r\n\t\tif (!this.langListDict.hasKey(this.lang))\r\n\t\t{\r\n\t\t\tlet langList = new LangConfigLoader();\r\n\t\t\tlangList.lang = this.lang;\r\n\t\t\tthis.langListDict.add(langList.lang, langList);\r\n\t\t\tthis._current = langList;\r\n\t\t}\r\n\t\treturn this.langListDict.getValue(this.lang);\r\n\t}\r\n\r\n\tgetValue(tableName: string, id: number, fieldName: string): string | string[]\r\n\t{\r\n\t\tlet langReader: LangConfigReader = this.current[tableName];\r\n\t\tif (langReader)\r\n\t\t{\r\n\t\t\tlet config: LangConfig = langReader.getConfig(id);\r\n\t\t\tif (config)\r\n\t\t\t{\r\n\t\t\t\treturn config.dict.get(fieldName);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n\r\nwindow['LangManager'] = LangManager;","import LangManager from './LangManager';\r\n\r\n\r\nexport class LoaderConfigLang extends excelconfigSources.Loader\r\n{\r\n\r\n}\r\n\r\nexport class MenuConfigLang extends excelconfigSources.Menu\r\n{\r\n\r\n\tget name():string\r\n\t{\r\n\t\tif(!LangManager.Instance.isUseLang)\r\n\t\t\treturn this.zhCnName\r\n\r\n\t\tlet value = <string> LangManager.Instance.getValue('Menu', this.id, 'zhCnName');\r\n\t\tif (!isNullOrEmpty(value))\r\n\t\t{\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\treturn this.zhCnName\r\n\t}\r\n\r\n}\r\n\r\nexport class MsgConfigLang extends excelconfigSources.Msg\r\n{\r\n\r\n\tget notice():string\r\n\t{\r\n\t\tif(!LangManager.Instance.isUseLang)\r\n\t\t\treturn this.zhCnNotice\r\n\r\n\t\tlet value = <string> LangManager.Instance.getValue('Msg', this.id, 'zhCnNotice');\r\n\t\tif (!isNullOrEmpty(value))\r\n\t\t{\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\treturn this.zhCnNotice\r\n\t}\r\n\r\n}\r\n\r\nexport class UnlockConfigLang extends excelconfigSources.Unlock\r\n{\r\n\r\n\tget name():string\r\n\t{\r\n\t\tif(!LangManager.Instance.isUseLang)\r\n\t\t\treturn this.zhCnName\r\n\r\n\t\tlet value = <string> LangManager.Instance.getValue('Unlock', this.id, 'zhCnName');\r\n\t\tif (!isNullOrEmpty(value))\r\n\t\t{\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\treturn this.zhCnName\r\n\t}\r\n\r\n}","\r\nimport {LoaderConfigLang} from \"../ExcelConfigLange\";\r\nexport default class LoaderConfig extends LoaderConfigLang\r\n{\r\n    // abcdefg\r\n}","\r\nimport {MenuConfigLang} from \"../ExcelConfigLange\";\r\nexport default class MenuConfig extends MenuConfigLang\r\n{\r\n}","\r\nimport {MsgConfigLang} from \"../ExcelConfigLange\";\r\nexport default class MsgConfig extends MsgConfigLang\r\n{\r\n}","\r\nimport {UnlockConfigLang} from \"../ExcelConfigLange\";\r\nexport default class UnlockConfig extends UnlockConfigLang\r\n{\r\n}","import { ExcelConfigManager } from \"./ExcelConfigManager\";\r\nimport { IBaseConfig } from \"./BaseConfig\";\r\n\r\nexport default class ExcelConfigReader<T extends IBaseConfig>\r\n{\r\n    // 表名\r\n    tableName: string;\r\n    tabelConfigClass:ObjectConstructor;\r\n    private _configList:T[] = [];\r\n    private _configDict:DictionaryObject<number, T>;\r\n\r\n    constructor(tabelName: string, tabelConfigClass:any)\r\n    {\r\n        this.tableName = tabelName;\r\n        this.tabelConfigClass = tabelConfigClass;\r\n    }\r\n    \r\n    /** 游戏所有配置加载完成 */\r\n    onGameLoadedAll()\r\n    {\r\n    }\r\n\r\n    // 配置列表\r\n    get configDict():DictionaryObject<number, T>\r\n    {\r\n        if(!this._configDict)\r\n        {\r\n            this._configDict = ExcelConfigManager.pbconfig[this.tableName];\r\n        }\r\n        return this._configDict;\r\n    }\r\n    \r\n    // 配置列表\r\n    get configList():T[]\r\n    {\r\n        if(this._configList.length == 0)\r\n        {\r\n            for(let id in this.configDict)\r\n            {\r\n                this._configList.push(this.configDict[id]);\r\n            }\r\n\r\n        }\r\n        return this._configList;\r\n    }\r\n\r\n    getConfigList():T[]\r\n    {\r\n        return this.configList;\r\n    }\r\n\r\n    // 获取配置\r\n    getConfig(id: TKey):T\r\n    {\r\n        if(!this.configDict[id])\r\n        {\r\n            console.log(`${this.tableName} 没有 id=${id} 的配置`);\r\n        }\r\n        return this.configDict[id];\r\n    }\r\n\r\n    // 是否存在配置\r\n    hasConfig(id: TKey): boolean\r\n    {\r\n        return this.configDict[id] ? true : false;\r\n    }\r\n\r\n    // 屏蔽配置\r\n    shieldConfig(ids:number[])\r\n    {\r\n        for (let i = 0, len = ids.length; i < len; i++) \r\n        {\r\n            let id = ids[i];\r\n            if (this.hasConfig(id)) \r\n            {\r\n                delete this._configDict[id];\r\n\r\n                let configlist = this.configList;\r\n                for (let i = 0, len = configlist.length; i < len; i++) \r\n                if (configlist[i].id == id)\r\n                {\r\n                    configlist.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","\r\n\r\nimport ExcelConfigReader from \"../ExcelConfigReader\";\r\nimport LoaderConfig from \"../ConfigExtends/LoaderConfig\";\r\nexport default class LoaderConfigReader extends ExcelConfigReader<LoaderConfig>\r\n{\r\n}","\r\n\r\nimport ExcelConfigReader from \"../ExcelConfigReader\";\r\nimport MenuConfig from \"../ConfigExtends/MenuConfig\";\r\nexport default class MenuConfigReader extends ExcelConfigReader<MenuConfig>\r\n{\r\n}","\r\n\r\nimport ExcelConfigReader from \"../ExcelConfigReader\";\r\nimport MsgConfig from \"../ConfigExtends/MsgConfig\";\r\nexport default class MsgConfigReader extends ExcelConfigReader<MsgConfig>\r\n{\r\n}","\r\n\r\nimport ExcelConfigReader from \"../ExcelConfigReader\";\r\nimport UnlockConfig from \"../ConfigExtends/UnlockConfig\";\r\nexport default class UnlockConfigReader extends ExcelConfigReader<UnlockConfig>\r\n{\r\n}","\r\nimport ExcelConfigReader from \"./ExcelConfigReader\";\r\nimport LoaderConfig from './ConfigExtends/LoaderConfig';\r\nimport MenuConfig from './ConfigExtends/MenuConfig';\r\nimport MsgConfig from './ConfigExtends/MsgConfig';\r\nimport UnlockConfig from './ConfigExtends/UnlockConfig';\r\n\r\nimport LoaderConfigReader from './ReaderExtends/LoaderConfigReader';\r\nimport MenuConfigReader from './ReaderExtends/MenuConfigReader';\r\nimport MsgConfigReader from './ReaderExtends/MsgConfigReader';\r\nimport UnlockConfigReader from './ReaderExtends/UnlockConfigReader';\r\n\r\n\r\nexport class ExcelConfigManager\r\n{\r\n\tstatic pbconfig:excelconfig.ConfigMng;\r\n\tloader = new LoaderConfigReader('Loader', LoaderConfig);\r\n\tmenu = new MenuConfigReader('Menu', MenuConfig);\r\n\tmsg = new MsgConfigReader('Msg', MsgConfig);\r\n\tunlock = new UnlockConfigReader('Unlock', UnlockConfig);\r\n\r\n\tstatic Init()\r\n\t{\r\n\t\texcelconfig.Loader = LoaderConfig;\r\n\t\texcelconfig.Menu = MenuConfig;\r\n\t\texcelconfig.Msg = MsgConfig;\r\n\t\texcelconfig.Unlock = UnlockConfig;\r\n\r\n\t}\r\n}\r\n","import { ExcelConfigManager } from \"./ExcelConfigManager\";\r\n\r\n/** 配置扩展列表， 非工具生成，手动扩展，自己生成 */\r\nexport default class ConfigManagerExpressionList extends ExcelConfigManager\r\n{\r\n    // actorStarLevel = new ActorLevelStarConfigReader();\r\n    // information = new InformationConfigReader();\r\n}","\r\nimport ConfigLoaderInterface from \"../Config/Interfaces/ConfigLoaderInterface\";\r\n\r\nimport ConfigManagerExpressionList from \"../Config/ConfigManagerExpressionList\";\r\nimport { ExcelConfigManager } from \"../Config/ExcelConfigManager\";\r\nimport ExcelConfigReader from \"../Config/ExcelConfigReader\";\r\nimport ConfigApi from \"../Config/ConfigApi\";\r\n\r\nexport enum EnumExcelConfigType\r\n{\r\n    pb,\r\n    json\r\n}\r\n\r\nexport default class ConfigManager extends ConfigManagerExpressionList\r\n{\r\n\tprivate static _Instance: ConfigManager;\r\n\tstatic get Instance(): ConfigManager\r\n\t{\r\n\t\tif (!ConfigManager._Instance)\r\n\t\t{\r\n\t\t\tConfigManager._Instance = new ConfigManager();\r\n\t\t}\r\n\t\treturn ConfigManager._Instance;\r\n    }\r\n    \r\n    constructor()\r\n    {\r\n        super();\r\n        this.initList();\r\n    }\r\n\r\n\r\n    // 消息--加载进度\r\n    sLoadProgress: Typed3Signal<number, number, number> = new Typed3Signal<number, number, number>();\r\n    // 消息--加载完成\r\n    sLoaded: Signal = new Signal()\r\n    // 加载器\r\n    configLoader: ConfigLoaderInterface;\r\n\r\n    // 加载进度\r\n    loadProgress = 0;\r\n\r\n    // 读取器\r\n    readers:ExcelConfigReader<any>[] = [];\r\n    readerMap:Map<string, ExcelConfigReader<any>> = new Map<string, ExcelConfigReader<any>>();\r\n\r\n    // 配置使用什么方式的\r\n    configType:EnumExcelConfigType = EnumExcelConfigType.json;\r\n\r\n    initList()\r\n    {\r\n        ExcelConfigManager.Init();\r\n        this.readers.length = 0;\r\n        for(let key in this)\r\n        {\r\n            let item = this[key];\r\n            if(item instanceof ExcelConfigReader)\r\n            {\r\n                this.readers.push(item);\r\n                this.readerMap.set(item.tableName, item);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    async loadAllAsync():Promise<void>\r\n    {\r\n        this.loadProgress = 0;\r\n        let count = this.readers.length;\r\n        let loadedNum = 0;\r\n\r\n        \r\n        switch(this.configType)\r\n        {\r\n            case EnumExcelConfigType.pb:\r\n                await this.loadPB();\r\n                break;\r\n            default:\r\n                await this.loadJson();\r\n                break\r\n        }\r\n\r\n\r\n        window['Global'] = <any> ExcelConfigManager.pbconfig.Global;\r\n\r\n        this.onGameLoadedAll();\r\n    }\r\n\r\n\r\n\r\n\r\n    async loadPB():Promise<void>\r\n    {\r\n        let arrayBuffer : ArrayBuffer = await ConfigApi.loadResAsyncFun(\"res/config/pb/excelconfig.bin\", Laya.Loader.BUFFER);\r\n        let buffer = new Uint8Array(arrayBuffer);\r\n        ExcelConfigManager.pbconfig = excelconfig.ConfigMng.decode(buffer);\r\n    }\r\n    \r\n    async loadJson():Promise<void>\r\n    {\r\n        let json  = await ConfigApi.loadResAsyncFun(\"res/config/pb/excelconfig.json\", Laya.Loader.JSON);\r\n        // let json  = await AntFrameConfig.GetNetConfig();\r\n        this.InstallJson(json);\r\n    }\r\n\r\n    InstallJson(json:object)\r\n    {\r\n        let cm = ExcelConfigManager.pbconfig = new excelconfig.ConfigMng();\r\n\r\n        // Global\r\n        let globalJson = json['Global'];\r\n        let globalConfig = new excelconfig.Global();\r\n        for(var key in globalJson)\r\n        {\r\n            let configKey = this.keyToPbKey(key);\r\n            globalConfig[key] = globalJson[key];\r\n        }\r\n        cm.Global = globalConfig;\r\n\r\n\r\n\r\n        for(let tabelName in json)\r\n        {\r\n            let tabelJson = json[tabelName];\r\n            if(!this.readerMap.has(tabelName))\r\n                continue;\r\n            let reader = this.readerMap.get(tabelName);\r\n            let configCls = reader.tabelConfigClass;\r\n            cm[tabelName] = {};\r\n            for(let id in tabelJson)\r\n            {\r\n                let lineJson = tabelJson[id];\r\n                let config = new configCls();\r\n                for(var key in lineJson)\r\n                {\r\n                    let configKey = this.keyToPbKey(key);\r\n                    config[configKey] = lineJson[key];\r\n                }\r\n                cm[tabelName][id] = config;\r\n            }\r\n        }\r\n    }\r\n\r\n    keyToPbKey(key: string)\r\n    {\r\n        if(key.indexOf(\"_\") == -1)\r\n            return key;\r\n        \r\n        let arr = key.split('_');\r\n        for(let i = 1; i < arr.length; i ++)\r\n        {\r\n            let str = arr[i];\r\n            if(str.length >= 1)\r\n            {\r\n                arr[i] = str.substr(0, 1).toUpperCase() + str.substr(1, str.length - 1);\r\n            }\r\n        }\r\n        key = arr.join('');\r\n        // console.log(key);\r\n        return key;\r\n    }\r\n\r\n    // 加载完成所有\r\n    onGameLoadedAll()\r\n    {\r\n        for (let i = 0; i < this.readers.length; i++)\r\n        {\r\n            this.readers[i].onGameLoadedAll();\r\n        }\r\n\r\n        this.sLoaded.dispatch();\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nwindow['ConfigManager'] = ConfigManager;","import GameConfig from \"./GameConfig\";\r\nimport ConfigManager from \"./_WillRemove/ConfigManager\";\r\nclass Main {\r\n\tconstructor() {\r\n\t\t//根据IDE设置初始化引擎\t\t\r\n\t\tif (window[\"Laya3D\"]) Laya3D.init(GameConfig.width, GameConfig.height);\r\n\t\telse Laya.init(GameConfig.width, GameConfig.height, Laya[\"WebGL\"]);\r\n\t\tLaya[\"Physics\"] && Laya[\"Physics\"].enable();\r\n\t\tLaya[\"DebugPanel\"] && Laya[\"DebugPanel\"].enable();\r\n\t\tLaya.stage.scaleMode = GameConfig.scaleMode;\r\n\t\tLaya.stage.screenMode = GameConfig.screenMode;\r\n\t\tLaya.stage.alignV = GameConfig.alignV;\r\n\t\tLaya.stage.alignH = GameConfig.alignH;\r\n\t\t//兼容微信不支持加载scene后缀场景\r\n\t\tLaya.URL.exportSceneToJson = GameConfig.exportSceneToJson;\r\n\r\n\t\t//打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）\r\n\t\tif (GameConfig.debug || Laya.Utils.getQueryString(\"debug\") == \"true\") Laya.enableDebugPanel();\r\n\t\tif (GameConfig.physicsDebug && Laya[\"PhysicsDebugDraw\"]) Laya[\"PhysicsDebugDraw\"].enable();\r\n\t\tif (GameConfig.stat) Laya.Stat.show();\r\n\t\tLaya.alertGlobalError(true);\r\n\r\n\t\t//激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程\r\n\t\tLaya.ResourceVersion.enable(\"version.json\", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);\r\n\r\n\t\tconsole.log(\"aaa\");\r\n\t\tthis.initConfig();\r\n\r\n\r\n\t}\r\n\r\n\t\r\n\t// 加载配置\r\n\tasync initConfig()\r\n\t{ \r\n\t\tvar configManager = ConfigManager.Instance;\r\n\t\tawait configManager.loadAllAsync();\r\n\t\twindow['configManager'] = configManager;\r\n\t\tconsole.log(configManager);\r\n\t}\r\n\r\n\tonLoadConfigProgress()\r\n\t{\r\n\r\n\t}\r\n\r\n\tonVersionLoaded(): void {\r\n\t\t//激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图\r\n\t\tLaya.AtlasInfoManager.enable(\"fileconfig.json\", Laya.Handler.create(this, this.onConfigLoaded));\r\n\t}\r\n\r\n\tonConfigLoaded(): void {\r\n\t\t//加载IDE指定的场景\r\n\t\tGameConfig.startScene && Laya.Scene.open(GameConfig.startScene);\r\n\t}\r\n}\r\n//激活启动类\r\nnew Main();\r\n"],"names":[],"mappings":"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"}